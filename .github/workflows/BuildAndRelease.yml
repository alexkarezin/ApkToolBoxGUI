name: Build and Release

# ref: https://github.com/LukeOnuke/lmark/blob/e3ccc75d104208754a8c4a6187fbc159b5ff90fd/.github/workflows/main.yml
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-windows:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: |
          mvn clean package
          mkdir staging
          mkdir jpackage-tmp
          $VERSION=$(mvn help:evaluate -D"expression=project.version" -q -DforceStdout)
          cp target/APKToolBoxGUI-$VERSION.jar jpackage-tmp
          jpackage --type app-image --name ApkToolBoxGUI-$VERSION-windows-with-JRE --input jpackage-tmp --main-jar APKToolBoxGUI-$VERSION.jar --dest staging --verbose
          zip -r APKToolBoxGUI-$VERSION-windows-with-JRE.zip staging/*
      - uses: actions/upload-artifact@v3
        with:
          name: ApkToolBoxGUI-windows-with-JRE
          path: staging/APKToolBoxGUI-*.zip
  build-linux:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: |
          mvn clean package
          mkdir staging
          mkdir jpackage-tmp
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          cp target/APKToolBoxGUI-$VERSION.jar jpackage-tmp
          jpackage --type app-image --name ApkToolBoxGUI-$VERSION-linux-with-JRE --input jpackage-tmp --main-jar APKToolBoxGUI-$VERSION.jar --dest staging --verbose
          zip -r APKToolBoxGUI-$VERSION-linux-with-JRE.zip staging/*
      - uses: actions/upload-artifact@v3
        with:
          name: ApkToolBoxGUI-linux-with-JRE
          path: staging/APKToolBoxGUI-*.zip
  build-macos:

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build with Maven
        run: |
          mvn clean package
          mkdir staging
          mkdir jpackage-tmp
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          cp target/APKToolBoxGUI-$VERSION.jar jpackage-tmp
          jpackage --type app-image --name ApkToolBoxGUI-$VERSION-macos-with-JRE --input jpackage-tmp --main-jar APKToolBoxGUI-$VERSION.jar --dest staging --verbose
          zip -r APKToolBoxGUI-$VERSION-macos-with-JRE.zip staging/*
      - uses: actions/upload-artifact@v3
        with:
          name: ApkToolBoxGUI-macos-with-JRE
          path: staging/APKToolBoxGUI-*.zip
